template(name="inputKey")
  button.ui.inverse.tiny.grey.button($b="click : parent.handleInputKey(value), text : text")
    
template(name="problem")
  unless currentUser
    +mustBeLoggedIn
  else
    .ui.text.container
      .ui.grid
        .nine.wide.column
          h3.header($b="text : title")
        .seven.wide.right.aligned.column
          .ui.blue.circular.label Level #{currentLevel}
          if currentUser
            +moduleScoreDisplay(moduleKey=moduleKey userId=userId)
      .ui.segment
        h4.header($b="text : description")
        +teXDisplay(teX=problemTeX)
        p($b="text : hint")
      .ui.segment
        .ui.grid
          .twelve.wide.column
            h4.header Antwort:
          .four.wide.right.aligned.column
            i.icon($b="toggle : showPreview, class : previewIconClass")
        if showPreview
          +teXDisplay(teX=preview)
        if isMobile
          .text-input-div
            span.text-input-span($b="text : answer")
        else
          .ui.fluid.input
            input($b="value : answer, enter : checkAnswer, focus : focusOnAnswer" placeholder="Deine Antwort (als Bruch oder Term)" type="text")
      if isMobile
        unless answered
          .ui.grey.inverted.segment.input-pad
            each inputKeys
              +inputKey
            
      if answered
        if answerCorrect
          .ui.green.inverted.center.aligned.segment
            h2.header Richtig!
        else
          .ui.red.inverted.center.aligned.segment
            h3.header Dein Ergebnis ist leider nicht korrekt.
        each failTextsRequired
          .ui.red.inverted.center.aligned.segment
            h4.header($b="text : this")
        each failTextsOptional
          .ui.yellow.inverted.center.aligned.segment
            h4.header($b="text : this")
        unless answerCorrect
          each passTextsRequired
            .ui.green.inverted.center.aligned.segment
              h4.header($b="text : this")
          each passTextsOptional
            .ui.green.inverted.center.aligned.segment
              h4.header($b="text : this")
        .ui.segment
          h4.header Lösung:
          +teXDisplay(teX=solutionTeX)
          //- +mathjax
          //-   div $$#{solutionTeX}$$
      div    
        //- a.ui.left.floated.teal.icon.button(href="/modules")
        //-   i.list.icon
        button.ui.left.floated.grey.inverse.icon.button($b="toggle : isMobile")
          i.keyboard.icon
        .ui.blue.icon.buttons
          button.ui.icon.button($b="click : easier, disable : autoLevelOn" title="Level verringern")
            i.minus.icon
          button.ui.button($b="click : harder, disable : autoLevelOn" title="Level erhöhen")
            i.plus.icon
          button.ui.icon.button($b="toggle : autoLevelOn, class : {active : autoLevelOn}, enable : loggedIn" title="Level automatisch anpassen")
            i.setting.icon
        
        if answered
          button.ui.right.floated.green.icon.button($b="click : newProblem")
            | weiter
            i.arrow.right.icon
        else
          button.ui.right.floated.red.icon.button($b="click : checkAnswer") OK
